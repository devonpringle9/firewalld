FWD_START_TEST([ICMP blocks])
AT_KEYWORDS(policy icmp_block)

FWD_CHECK([--permanent --new-policy=foobar], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --add-ingress-zone ANY], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --add-egress-zone HOST], 0, [ignore])

dnl permanent --> runtime
FWD_CHECK([--permanent --policy=foobar --add-icmp-block echo-request], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --add-icmp-block echo-reply], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --add-icmp-block redirect], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --add-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 0, [ignore])
FWD_CHECK([--permanent --policy foobar --query-icmp-block echo-request], 0, ignore)
FWD_CHECK([--permanent --policy foobar --query-icmp-block echo-reply], 0, ignore)
FWD_CHECK([--permanent --policy foobar --query-icmp-block redirect], 0, ignore)
FWD_CHECK([--permanent --policy=foobar --query-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 0, [ignore])
FWD_RELOAD
FWD_CHECK([--policy foobar --query-icmp-block echo-request], 0, ignore)
FWD_CHECK([--policy foobar --query-icmp-block echo-reply], 0, ignore)
FWD_CHECK([--policy foobar --query-icmp-block redirect], 0, ignore)
FWD_CHECK([--policy=foobar --query-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 0, [ignore])
dnl NFT_LIST_RULES([inet], [filter_policy_foobar_allow], 0, [dnl
dnl     FIXME: verify rules added
dnl ])
dnl IPTABLES_LIST_RULES([filter], [pol_foobar_allow], 0, [dnl
dnl     FIXME: verify rules added
dnl ])
dnl IP6TABLES_LIST_RULES([filter], [pol_foobar_allow], 0, [dnl
dnl     FIXME: verify rules added
dnl ])
FWD_CHECK([--permanent --policy=foobar --remove-icmp-block echo-request], 0, [ignore])
FWD_CHECK([--permanent --policy foobar --query-icmp-block echo-request], 1, [ignore])
FWD_CHECK([--permanent --policy foobar --query-icmp-block echo-reply], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --remove-icmp-block echo-reply], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --remove-icmp-block redirect], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --remove-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --query-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 1, [ignore])
FWD_CHECK([--policy=foobar --remove-icmp-block echo-request], 0, [ignore])
FWD_CHECK([--policy foobar --query-icmp-block echo-request], 1, [ignore])
FWD_CHECK([--policy foobar --query-icmp-block echo-reply], 0, [ignore])
FWD_CHECK([--policy=foobar --remove-icmp-block echo-reply], 0, [ignore])
FWD_CHECK([--policy=foobar --remove-icmp-block redirect], 0, [ignore])
FWD_CHECK([--policy=foobar --remove-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 0, [ignore])
FWD_CHECK([--policy=foobar --query-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 1, [ignore])

dnl runtime --> permanent
m4_ifdef([TESTING_FIREWALL_OFFLINE_CMD], [],
FWD_CHECK([--policy=foobar --add-icmp-block echo-request], 0, [ignore])
FWD_CHECK([--policy=foobar --add-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 0, [ignore])
FWD_CHECK([--policy foobar --query-icmp-block echo-request], 0, [ignore])
FWD_CHECK([--policy=foobar --query-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 0, [ignore])
FWD_CHECK([--runtime-to-permanent], 0, [ignore])
FWD_CHECK([--permanent --policy foobar --query-icmp-block echo-request], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --query-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 0, [ignore])
dnl NFT_LIST_RULES([inet], [filter_policy_foobar_allow], 0, [dnl
dnl     FIXME: verify rules added w/ helper rule
dnl ])
dnl IPTABLES_LIST_RULES([filter], [pol_foobar_allow], 0, [dnl
dnl     FIXME: verify rules added
dnl ])
dnl IP6TABLES_LIST_RULES([filter], [pol_foobar_allow], 0, [dnl
dnl     FIXME: verify rules added
dnl ])
FWD_CHECK([--permanent --policy=foobar --remove-icmp-block echo-request], 0, [ignore])
FWD_CHECK([--permanent --policy=foobar --remove-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 0, [ignore])
FWD_CHECK([--permanent --policy foobar --query-icmp-block echo-request], 1, [ignore])
FWD_CHECK([--permanent --policy=foobar --query-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 1, [ignore])
FWD_CHECK([--policy=foobar --remove-icmp-block echo-request], 0, [ignore])
FWD_CHECK([--policy=foobar --remove-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 0, [ignore])
FWD_CHECK([--policy foobar --query-icmp-block echo-request], 1, [ignore])
FWD_CHECK([--policy=foobar --query-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="redirect"'], 1, [ignore])
])

dnl invalid icmp blocks
FWD_CHECK([--permanent --policy=foobar --add-icmp-block dummy], 107, [ignore], [ignore])
FWD_CHECK([--policy=foobar --add-icmp-block dummy], 107, [ignore], [ignore])
FWD_CHECK([--permanent --policy=foobar --add-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="dummy"'], 107, [ignore], [ignore])
FWD_CHECK([--policy=foobar --add-rich-rule='rule family=ipv6 source address=1234:5678::/64 icmp-block name="dummy"'], 107, [ignore], [ignore])

FWD_END_TEST([ -e '/ERROR: INVALID_ICMPTYPE/d'])
